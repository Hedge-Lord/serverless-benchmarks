apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: s3-batching-agent
  namespace: openwhisk
  labels:
    app: s3-batching-agent
spec:
  selector:
    matchLabels:
      app: s3-batching-agent
  template:
    metadata:
      labels:
        app: s3-batching-agent
    spec:
      containers:
      - name: batching-agent
        image: s3-batching-agent:latest
        imagePullPolicy: Never  # Don't try to pull from a registry, use local image only
        ports:
        - containerPort: 8080
          hostPort: 8080  # Expose directly on the node at a fixed port
        env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: access-key
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: secret-key
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        args:
        - "--port=8080"
        - "--batching=true"
        - "--batch-window=100ms"
        - "--max-batch-size=10"
        - "--debug=true"
        - "--aws-region=us-east-1"
        - "--default-bucket=ow-benchmark-test"
        resources:
          limits:
            cpu: "500m"
            memory: "256Mi"
          requests:
            cpu: "100m"
            memory: "128Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 2
          periodSeconds: 5
      hostNetwork: true  # Use host networking
      dnsPolicy: ClusterFirstWithHostNet 